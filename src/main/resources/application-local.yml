spring:
  datasource:
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    url: ${LOCAL_DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
#      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 1000

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.jdbc.core: DEBUG
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false
    s3:
      bucket: snapi-s3
#cloud:
#  aws:
#    credentials:
#      access-key: ${AWS_ACCESS_KEY}
#      secret-key: ${AWS_SECRET_KEY}
#    region:
#      static: ap-northeast-2
#    s3:
#      bucket: snapi-s3
app:
  ai:
    base-url: ${FLASK_IP_URL}   # 배포 IP
    predict-path: "/predict"               # 엔드포인트 경로
    connect-timeout-ms: 2000               # 필요시 조정
    read-timeout-ms: 9000
    pass-threshold: 0.70   # <- 필요에 맞게 조정 (예: 0.90이면 더 엄격)